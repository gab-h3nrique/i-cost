// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// npx prisma migrate dev --name migrate's name    ** atualizar migrate
// npx prisma db push                              ** subir banco pra nuvem

// generator client {
//   provider = "prisma-client-js"
//   previewFeatures = ["referentialIntegrity"]
// }
// datasource db {
//   provider = "mysql"
//   url = env("DATABASE_URL")
//   referentialIntegrity = "prisma"
// }

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id            Int @id @default(autoincrement())
  name          String
  email         String  @unique
  password      String
  group         Group[]
  participation Participation[]
}

model Budget {
  id          Int @id @default(autoincrement())
  name        String
  groupName   String @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  expenses    Expense[]
}

model Group {
  id        Int @id @default(autoincrement())
  name      String
  user      User @relation(fields: [userId], references: [id])
  userId    Int
  ruler     Boolean @default(false)
}

model Expense {
  id            Int @id @default(autoincrement())
  name          String
  category      String
  description   String?
  amount        Int @default(1)
  value         Int @default(0)
  budget        Budget @relation(fields: [budgetId], references: [id])
  budgetId      Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  participation Participation[]
}

model Participation {
  id        Int @id @default(autoincrement())
  expense   Expense @relation(fields: [expenseId], references: [id])
  expenseId Int
  user      User @relation(fields: [userId], references: [id])
  userId    Int
  value     Float
}